version: '3.9'

services:
  postgres:
    image: postgres:14
    container_name: postgres_db
    environment:
      POSTGRES_USER: userDev
      POSTGRES_PASSWORD: "Jonny 09"
      POSTGRES_DB: social_network_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U userDev -d social_network_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth_service
    environment:
      DB_USERNAME: userDev
      DB_PASSWORD: "Jonny 09"
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_NAME: social_network_db
      NODE_ENV: development
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microservices-network
    restart: always

  posts-service:
    build:
      context: ./posts-service
      dockerfile: Dockerfile
    container_name: posts_service
    environment:
      DB_USERNAME: userDev
      DB_PASSWORD: "Jonny 09"
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_NAME: social_network_db
      NODE_ENV: development
    ports:
      - "3002:3002"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microservices-network
    restart: always

  profile-service:
    build:
      context: ./profile-service
      dockerfile: Dockerfile
    container_name: profile_service
    environment:
      DB_USERNAME: userDev
      DB_PASSWORD: "Jonny 09"
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_NAME: social_network_db
      NODE_ENV: development
    ports:
      - "3003:3003"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microservices-network
    restart: always


  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api_gateway
    depends_on:
      - auth-service
      - profile-service
      - posts-service
    ports:
      - "3000:3000"
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres_data: